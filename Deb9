#!/bin/sh
# Created by MYTH

# Requirement
apt update
apt upgrade -y
wget -O - https://swupdate.openvpn.net/repos/repo-public.gpg|apt-key add -
sleep 2
echo "deb http://build.openvpn.net/debian/openvpn/release/2.4 stretch main" > /etc/apt/sources.list.d/openvpn-aptrepo.list
apt install openvpn nginx php7.0-fpm stunnel4 squid3 dropbear easy-rsa vnstat build-essential fail2ban zip -y

# Initializing variables
MYIP=`ifconfig eth0 | awk 'NR==2 {print $2}'`
MYIP2="s/xxxxxxxxx/$MYIP/g";

# Initializing setup
apt-get remove --purge unscd -y
userdel -f debian
cd /root
wget "https://github.com/jouganvpn/vpsauto/raw/master/Tools/plugin.tgz"

# Disable IPv6
echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6

# Set timezone Kuala Lumpur (GMT +8)
ln -fs /usr/share/zoneinfo/Asia/Kuala_Lumpur /etc/localtime

# Install Webmin
echo "# Created by MYTH" > /etc/apt/sources.list.d/webmin.list
echo "deb http://download.webmin.com/download/repository sarge contrib" > /etc/apt/sources.list.d/webmin.list
echo "deb http://webmin.mirror.somersettechsolutions.co.uk/repository sarge contrib" > /etc/apt/sources.list.d/webmin.list
wget http://www.webmin.com/jcameron-key.asc
apt-key add jcameron-key.asc
apt update
apt install -y webmin
service webmin restart

# Install Screenfetch
apt-get -y install lsb-release scrot
wget -O /usr/bin/screenfetch "https://github.com/jouganvpn/vpsauto/raw/master/Tools/screenfetch"
chmod +x /usr/bin/screenfetch

# Edit .profile
echo "clear" >> .profile
echo "screenfetch" >> .profile

# Configure Dropbear
sed -i 's/NO_START=1/NO_START=0/g' /etc/default/dropbear
sed -i 's/DROPBEAR_PORT=22/DROPBEAR_PORT=442/g' /etc/default/dropbear
sed -i 's/DROPBEAR_EXTRA_ARGS=/DROPBEAR_EXTRA_ARGS="-p 444"/g' /etc/default/dropbear
echo "/bin/false" >> /etc/shells

# Configure Squid3
cat > /etc/squid/squid.conf <<-END
acl localhost src 127.0.0.1/32 ::1
acl to_localhost dst 127.0.0.0/8 0.0.0.0/32 ::1
acl SSL_ports port 443
acl SSL_ports port 587
acl Safe_ports port 21
acl Safe_ports port 442
acl Safe_ports port 443
acl Safe_ports port 444
acl Safe_ports port 70
acl Safe_ports port 210
acl Safe_ports port 1025-65535
acl Safe_ports port 280
acl Safe_ports port 488
acl Safe_ports port 591
acl Safe_ports port 777
acl CONNECT method CONNECT
acl SSH dst xxxxxxxxx-xxxxxxxxx/32
http_access allow SSH
http_access allow manager localhost
http_access deny manager
http_access allow localhost
http_access deny all
http_port 8080
http_port 3128
coredump_dir /var/spool/squid3
refresh_pattern ^ftp: 1440 20% 10080
refresh_pattern ^gopher: 1440 0% 1440
refresh_pattern -i (/cgi-bin/|\?) 0 0% 0
refresh_pattern . 0 20% 4320
visible_hostname MYTH
END
sed -i $MYIP2 /etc/squid/squid.conf

# Configure banner
rm /etc/issue.net
wget -O /etc/issue.net "https://github.com/jouganvpn/vpsauto/raw/master/Tools/issue.net"
sed -i 's@#Banner none@Banner /etc/issue.net@g' /etc/ssh/sshd_config
sed -i 's@DROPBEAR_BANNER=""@DROPBEAR_BANNER="/etc/issue.net"@g' /etc/default/dropbear
service ssh restart
service dropbear restart

# Configure OpenVPN
cp -r /usr/share/easy-rsa/ /etc/openvpn
mkdir /etc/openvpn/easy-rsa/keys
sed -i 's|export KEY_COUNTRY="US"|export KEY_COUNTRY="MY"|' /etc/openvpn/easy-rsa/vars
sed -i 's|export KEY_PROVINCE="CA"|export KEY_PROVINCE="KualaLumpur"|' /etc/openvpn/easy-rsa/vars
sed -i 's|export KEY_CITY="SanFrancisco"|export KEY_CITY="KualaLumpur"|' /etc/openvpn/easy-rsa/vars
sed -i 's|export KEY_ORG="Fort-Funston"|export KEY_ORG="JouganVPN"|' /etc/openvpn/easy-rsa/vars
sed -i 's|export KEY_EMAIL="me@myhost.mydomain"|export KEY_EMAIL="myth@jouganvpn.tk"|' /etc/openvpn/easy-rsa/vars
sed -i 's|export KEY_OU="MyOrganizationalUnit"|export KEY_OU="InternetSecurity"|' /etc/openvpn/easy-rsa/vars
sed -i 's|export KEY_NAME="EasyRSA"|export KEY_NAME="MYTH"|' /etc/openvpn/easy-rsa/vars
openssl dhparam -out /etc/openvpn/dh2048.pem 2048
cd /etc/openvpn/easy-rsa
cp openssl-1.0.0.cnf openssl.cnf
. ./vars
./clean-all
export EASY_RSA="${EASY_RSA:-.}"
"$EASY_RSA/pkitool" --initca $*
export EASY_RSA="${EASY_RSA:-.}"
"$EASY_RSA/pkitool" --server server
export EASY_RSA="${EASY_RSA:-.}"
"$EASY_RSA/pkitool" client
cd
cp /etc/openvpn/easy-rsa/keys/{server.crt,server.key,ca.crt} /etc/openvpn
chmod +x /etc/openvpn/ca.crt

# Configure OpenVPN server
tar -xzvf /root/plugin.tgz -C /usr/lib/openvpn/
rm plugin.tgz
chmod +x /usr/lib/openvpn/*
cat > /etc/openvpn/server.conf <<-END
port 1194
proto tcp
dev tun
ca ca.crt
cert server.crt
key server.key
dh dh2048.pem
verify-client-cert none
username-as-common-name
plugin /usr/lib/openvpn/plugins/openvpn-plugin-auth-pam.so login
server 10.8.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"
push "route-method exe"
push "route-delay 2"
socket-flags TCP_NODELAY
push "socket-flags TCP_NODELAY"
keepalive 10 120
comp-lzo
user nobody
group nogroup
persist-key
persist-tun
status openvpn-status.log
log openvpn.log
verb 3
ncp-disable
cipher none
auth none
END
systemctl start openvpn@server

# Configure OpenVPN client config
mkdir -p /home/vps/public_html
cat > /home/vps/public_html/tcp-1194.ovpn <<-END
# Created by MYTH

auth-user-pass
client
dev tun
proto tcp
remote $MYIP 1194
persist-key
persist-tun
pull
resolv-retry infinite
nobind
user nobody
comp-lzo
remote-cert-tls server
verb 3
mute 2
connect-retry 5 5
connect-retry-max 8080
mute-replay-warnings
redirect-gateway def1
script-security 2
cipher none
auth none
http-proxy $MYIP 8080
http-proxy-option CUSTOM-HEADER CONNECT HTTP/1.1
http-proxy-option CUSTOM-HEADER Host m.youtube.com
http-proxy-option CUSTOM-HEADER X-Forward-Host m.youtube.com
http-proxy-option CUSTOM-HEADER Connection: Keep-Alive
http-proxy-option CUSTOM-HEADER Proxy-Connection: keep-alive
END
sed -i $MYIP2 /etc/squid/squid.conf
echo '<ca>' >> /home/vps/public_html/tcp-1194.ovpn
cat /etc/openvpn/ca.crt >> /home/vps/public_html/tcp-1194.ovpn
echo '</ca>' >> /home/vps/public_html/tcp-1194.ovpn

# Configure OpenVPN client config (Stunnel)
cat > /home/vps/public_html/ssl-587.ovpn <<-END
# Created by MYTH

auth-user-pass
client
dev tun
proto tcp
remote $MYIP 587
route $MYIP 255.255.255.255 net_gateway
persist-key
persist-tun
pull
resolv-retry infinite
nobind
user nobody
comp-lzo
remote-cert-tls server
verb 3
mute 2
connect-retry 5 5
connect-retry-max 8080
mute-replay-warnings
redirect-gateway def1
script-security 2
cipher none
auth none
END
sed -i $MYIP2 /etc/squid/squid.conf
echo '<ca>' >> /home/vps/public_html/ssl-587.ovpn
cat /etc/openvpn/ca.crt >> /home/vps/public_html/ssl-587.ovpn
echo '</ca>' >> /home/vps/public_html/ssl-587.ovpn
cat > /home/vps/public_html/stunnel.conf <<-END
client = yes
debug = 6

[openvpn]
accept = 127.0.0.1:587
connect = $MYIP:1194
TIMEOUTclose = 0
verify = 0
sni = m.facebook.com
END

# Configure Stunnel4
sed -i 's/ENABLED=0/ENABLED=1/g' /etc/default/stunnel4
openssl req -new -newkey rsa:2048 -days 3650 -nodes -x509 -sha256 -subj '/CN=MYTH/O=JouganVPN/C=MY' -keyout /etc/stunnel/stunnel.pem -out /etc/stunnel/stunnel.pem
cat > /etc/stunnel/stunnel.conf <<-END
sslVersion = all
pid = /stunnel.pid
socket = l:TCP_NODELAY=1
socket = r:TCP_NODELAY=1
client = no

[openvpn]
accept = 127.0.0.1:587
connect = 127.0.0.1:1194
cert = /etc/stunnel/stunnel.pem

[dropbear]
accept = 127.0.0.1:443
connect = 127.0.0.1:80
cert = /etc/stunnel/stunnel.pem
END

# Set IPv4 forward
echo 1 > /proc/sys/net/ipv4/ip_forward
sed -i 's|#net.ipv4.ip_forward=1|net.ipv4.ip_forward=1|' /etc/sysctl.conf

# Configure IPtables
cat > /etc/iptables.up.rules <<-END
*nat
:PREROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
-A POSTROUTING -j SNAT --to-source xxxxxxxxx
-A POSTROUTING -o eth0 -j MASQUERADE
-A POSTROUTING -s 192.168.10.0/24 -o eth0 -j MASQUERADE
COMMIT
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:fail2ban-ssh - [0:0]
-A INPUT -p tcp -m multiport --dports 22 -j fail2ban-ssh
-A INPUT -p ICMP --icmp-type 8 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 53 -j ACCEPT
-A INPUT -p tcp --dport 22  -m state --state NEW -j ACCEPT
-A INPUT -p tcp --dport 80  -m state --state NEW -j ACCEPT
-A INPUT -p tcp --dport 442  -m state --state NEW -j ACCEPT
-A INPUT -p tcp --dport 443  -m state --state NEW -j ACCEPT
-A INPUT -p tcp --dport 587  -m state --state NEW -j ACCEPT
-A INPUT -p tcp --dport 1194  -m state --state NEW -j ACCEPT
-A INPUT -p udp --dport 1194  -m state --state NEW -j ACCEPT
-A INPUT -p tcp --dport 3128  -m state --state NEW -j ACCEPT
-A INPUT -p udp --dport 3128  -m state --state NEW -j ACCEPT
-A INPUT -p tcp --dport 8080  -m state --state NEW -j ACCEPT
-A INPUT -p udp --dport 8080  -m state --state NEW -j ACCEPT 
-A INPUT -p tcp --dport 10000  -m state --state NEW -j ACCEPT
-A fail2ban-ssh -j RETURN
COMMIT
*raw
:PREROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
COMMIT
*mangle
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
COMMIT
END
sed -i $MYIP2 /etc/iptables.up.rules;
iptables-restore < /etc/iptables.up.rules

# Configure Nginx
sed -i 's/\/var\/www\/html;/\/home\/vps\/public_html\/;/g' /etc/nginx/sites-enabled/default
wget -O /home/vps/public_html/index.zip "https://github.com/jouganvpn/vpsauto/raw/master/Tools/index.zip"
cd /home/vps/public_html/
rm index.html
unzip index.zip
rm index.zip
cd

# Create and Configure rc.local
cat > /etc/rc.local <<-END
#!/bin/sh -e

exit 0
END
chmod +x /etc/rc.local
sed -i '$ i\echo "nameserver 8.8.8.8" > /etc/resolv.conf' /etc/rc.local
sed -i '$ i\echo "nameserver 8.8.4.4" >> /etc/resolv.conf' /etc/rc.local
sed -i '$ i\iptables-restore < /etc/iptables.up.rules' /etc/rc.local

# Install BadVPN
cd
wget -O /usr/bin/badvpn-udpgw "https://github.com/jouganvpn/vpsauto/raw/master/Tools/badvpn-udpgw"
if [ "$OS" == "x86_64" ]; then
  wget -O /usr/bin/badvpn-udpgw "https://github.com/jouganvpn/vpsauto/raw/master/Tools/badvpn-udpgw64"
fi
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7300' /etc/rc.local
chmod +x /usr/bin/badvpn-udpgw
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7300

# Configure menu
cd /usr/bin
wget https://github.com/jouganvpn/vpsauto/raw/master/Tools/menu.zip
unzip menu.zip
chmod +x add-user
chmod +x add-user-trial
chmod +x delete-user
chmod +x check-user-login
chmod +x view-all-user
chmod +x restart-all-service
chmod +x speedtest
chmod +x script-info
chmod +x menu
rm menu.zip

# AutoReboot Tools
echo "10 0 * * * root /usr/local/bin/reboot_sys" > /etc/cron.d/reboot_sys
echo "0 1 * * * root delete_expired" > /etc/cron.d/delete_expired
echo "*0 */2 * * * root clearcache" > /etc/cron.d/clearcache

# Add eth0 to vnstat
vnstat -u -i eth0

# ZIP configs
cd /home/vps/public_html
zip Configs.zip tcp-1194.ovpn ssl-587.ovpn stunnel.conf

# Install libxml-parser
apt-get install -y libxml-parser-perl

# Finalizing
apt-get -y autoremove
chown -R www-data:www-data /home/vps/public_html
service nginx start
service php7.0-fpm start
service vnstat restart
service openvpn restart
service dropbear restart
service fail2ban restart
service squid restart
clear
echo "Finalizing setup . . ."
sleep 3
echo "Clearing history . . ."
sleep 3
echo "Setup complete!"
sleep 4

# Info
clear
echo ""  | tee -a log-install.txt
echo "  ::::    ::::  :::   ::: ::::::::::: :::    :::"  | tee -a log-install.txt
echo "  +:+:+: :+:+:+ :+:   :+:     :+:     :+:    :+:"  | tee -a log-install.txt
echo "  +:+ +:+:+ +:+  +:+ +:+      +:+     +:+    +:+"  | tee -a log-install.txt
echo "  +#+  +:+  +#+   +#++:       +#+     +#++:++#++"  | tee -a log-install.txt
echo "  +#+       +#+    +#+        +#+     +#+    +#+"  | tee -a log-install.txt
echo "  #+#       #+#    #+#        #+#     #+#    #+#"  | tee -a log-install.txt
echo "  ###       ###    ###        ###     ###    ###"  | tee -a log-install.txt
echo "                 [Script by MYTH]"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "Server Information:"  | tee -a log-install.txt
echo "	+ Timezone       : Asia/Kuala_Lumpur (GMT +8)"  | tee -a log-install.txt
echo "	+ IPtables       : [ON]"  | tee -a log-install.txt
echo "	+ Fail2Ban       : [ON]"  | tee -a log-install.txt
echo "	+ Auto-Reboot    : [OFF]"  | tee -a log-install.txt
echo "	+ IPv6           : [OFF]"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "Service Installed:"  | tee -a log-install.txt
echo "	+ SSH            : 22"  | tee -a log-install.txt
echo "	+ Dropbear       : 442, 444"  | tee -a log-install.txt
echo "	+ Stunnel4       : 443"  | tee -a log-install.txt
echo "	+ Squid Proxy    : 8080, 3128"  | tee -a log-install.txt
echo "	+ OpenVPN        : TCP 1194, SSL 587"  | tee -a log-install.txt
echo "	+ BadVPN         : 7300"  | tee -a log-install.txt
echo "	+ Nginx          : 80"  | tee -a log-install.txt
echo "	+ Webmin         : 10000"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "IMPORTANT:"  | tee -a log-install.txt
echo "	+ Webmin         : http://$MYIP:10000/"  | tee -a log-install.txt
echo "	+ OpenVPN Config : http://$MYIP/Configs.zip"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "To display MENU, type command 'menu'."  | tee -a log-install.txt


# Reboot VPS
echo ""
echo "Rebooting your VPS in 10 seconds . . ."
sleep 10
reboot
